#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—Ä—Ö—ñ–≤—É –±–∞–∑ –¥–∞–Ω–∏—Ö (MySQL + Qdrant)
# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: ./scripts/backup_database.sh [backup_name]

set -e

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
BACKUP_DIR="./backups"
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
BACKUP_NAME=${1:-"qa_backup_${TIMESTAMP}"}
BACKUP_PATH="${BACKUP_DIR}/${BACKUP_NAME}"

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}üöÄ –ü–æ—á–∞—Ç–æ–∫ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—Ä—Ö—ñ–≤—É –±–∞–∑ –¥–∞–Ω–∏—Ö...${NC}"
echo -e "${YELLOW}–ù–∞–∑–≤–∞ –∞—Ä—Ö—ñ–≤—É: ${BACKUP_NAME}${NC}"

# –°—Ç–≤–æ—Ä—é—î–º–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –¥–ª—è –±–µ–∫–∞–ø—ñ–≤
mkdir -p "${BACKUP_PATH}"

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤
check_containers() {
    echo -e "${YELLOW}üìã –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤...${NC}"
    
    if ! docker compose ps | grep -q "qa_mysql.*Up"; then
        echo -e "${RED}‚ùå MySQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω–∏–π!${NC}"
        echo "–ó–∞–ø—É—Å—Ç—ñ—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏: docker compose up -d"
        exit 1
    fi
    
    if ! docker compose ps | grep -q "qa_qdrant.*Up"; then
        echo -e "${RED}‚ùå Qdrant –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω–∏–π!${NC}"
        echo "–ó–∞–ø—É—Å—Ç—ñ—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏: docker compose up -d"
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ –í—Å—ñ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ –∑–∞–ø—É—â–µ–Ω—ñ${NC}"
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–µ–∫–∞–ø—É MySQL
backup_mysql() {
    echo -e "${YELLOW}üóÑÔ∏è  –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–µ–∫–∞–ø—É MySQL...${NC}"
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ SQL –¥–∞–º–ø
    docker compose exec -T mysql mysqldump \
        --user=root \
        --password=root \
        --single-transaction \
        --routines \
        --triggers \
        --all-databases > "${BACKUP_PATH}/mysql_dump.sql"
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ MySQL –±–µ–∫–∞–ø —Å—Ç–≤–æ—Ä–µ–Ω–æ: ${BACKUP_PATH}/mysql_dump.sql${NC}"
        
        # –ü–æ–∫–∞–∑—É—î–º–æ —Ä–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É
        DUMP_SIZE=$(du -h "${BACKUP_PATH}/mysql_dump.sql" | cut -f1)
        echo -e "${YELLOW}üìä –†–æ–∑–º—ñ—Ä MySQL –¥–∞–º–ø—É: ${DUMP_SIZE}${NC}"
    else
        echo -e "${RED}‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è MySQL –±–µ–∫–∞–ø—É!${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–µ–∫–∞–ø—É Qdrant
backup_qdrant() {
    echo -e "${YELLOW}üîç –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–µ–∫–∞–ø—É Qdrant...${NC}"
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –¥–ª—è Qdrant –±–µ–∫–∞–ø—É
    mkdir -p "${BACKUP_PATH}/qdrant"
    
    # –ö–æ–ø—ñ—é—î–º–æ –¥–∞–Ω—ñ Qdrant –∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    docker compose exec -T qdrant tar -czf - /qdrant/storage > "${BACKUP_PATH}/qdrant_storage.tar.gz"
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ Qdrant –±–µ–∫–∞–ø —Å—Ç–≤–æ—Ä–µ–Ω–æ: ${BACKUP_PATH}/qdrant_storage.tar.gz${NC}"
        
        # –ü–æ–∫–∞–∑—É—î–º–æ —Ä–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É
        QDRANT_SIZE=$(du -h "${BACKUP_PATH}/qdrant_storage.tar.gz" | cut -f1)
        echo -e "${YELLOW}üìä –†–æ–∑–º—ñ—Ä Qdrant –±–µ–∫–∞–ø—É: ${QDRANT_SIZE}${NC}"
    else
        echo -e "${RED}‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è Qdrant –±–µ–∫–∞–ø—É!${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ—Ç–∞–¥–∞–Ω–∏—Ö –±–µ–∫–∞–ø—É
create_metadata() {
    echo -e "${YELLOW}üìù –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ—Ç–∞–¥–∞–Ω–∏—Ö –±–µ–∫–∞–ø—É...${NC}"
    
    cat > "${BACKUP_PATH}/backup_info.json" << EOF
{
    "backup_name": "${BACKUP_NAME}",
    "created_at": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
    "created_by": "$(whoami)",
    "hostname": "$(hostname)",
    "docker_compose_version": "$(docker compose version --short)",
    "mysql_version": "$(docker compose exec mysql mysql --version | cut -d' ' -f3)",
    "qdrant_version": "$(docker compose exec qdrant qdrant --version | head -n1 | cut -d' ' -f2)",
    "backup_size": {
        "mysql_dump": "$(du -b "${BACKUP_PATH}/mysql_dump.sql" | cut -f1)",
        "qdrant_storage": "$(du -b "${BACKUP_PATH}/qdrant_storage.tar.gz" | cut -f1)"
    },
    "description": "QA MCP Server database backup"
}
EOF
    
    echo -e "${GREEN}‚úÖ –ú–µ—Ç–∞–¥–∞–Ω—ñ —Å—Ç–≤–æ—Ä–µ–Ω–æ: ${BACKUP_PATH}/backup_info.json${NC}"
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—Ä—Ö—ñ–≤—É
create_archive() {
    echo -e "${YELLOW}üì¶ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—ñ–Ω–∞–ª—å–Ω–æ–≥–æ –∞—Ä—Ö—ñ–≤—É...${NC}"
    
    local original_dir=$(pwd)
    cd "${BACKUP_DIR}"
    tar -czf "${BACKUP_NAME}.tar.gz" "${BACKUP_NAME}/"
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ –ê—Ä—Ö—ñ–≤ —Å—Ç–≤–æ—Ä–µ–Ω–æ: ${BACKUP_DIR}/${BACKUP_NAME}.tar.gz${NC}"
        
        # –ü–æ–∫–∞–∑—É—î–º–æ —Ä–æ–∑–º—ñ—Ä –∞—Ä—Ö—ñ–≤—É
        ARCHIVE_SIZE=$(du -h "${BACKUP_NAME}.tar.gz" | cut -f1)
        echo -e "${YELLOW}üìä –†–æ–∑–º—ñ—Ä –∞—Ä—Ö—ñ–≤—É: ${ARCHIVE_SIZE}${NC}"
        
        # –í–∏–¥–∞–ª—è—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é
        rm -rf "${BACKUP_NAME}"
        
        echo -e "${GREEN}üéâ –ë–µ–∫–∞–ø —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ!${NC}"
        echo -e "${YELLOW}üìÅ –®–ª—è—Ö –¥–æ –∞—Ä—Ö—ñ–≤—É: ${BACKUP_DIR}/${BACKUP_NAME}.tar.gz${NC}"
        
        # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –≤ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é
        cd "$original_dir"
    else
        echo -e "${RED}‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—Ä—Ö—ñ–≤—É!${NC}"
        cd "$original_dir"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
show_statistics() {
    local archive_file="${BACKUP_DIR}/${BACKUP_NAME}.tar.gz"
    echo -e "\n${GREEN}üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–µ–∫–∞–ø—É:${NC}"
    echo -e "${YELLOW}–ù–∞–∑–≤–∞: ${BACKUP_NAME}${NC}"
    echo -e "${YELLOW}–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è: $(date)${NC}"
    
    if [ -f "$archive_file" ]; then
        echo -e "${YELLOW}–†–æ–∑–º—ñ—Ä –∞—Ä—Ö—ñ–≤—É: $(du -h "$archive_file" | cut -f1)${NC}"
        echo -e "${YELLOW}–†–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è: $archive_file${NC}"
    else
        echo -e "${RED}‚ùå –ê—Ä—Ö—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: $archive_file${NC}"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞
main() {
    echo -e "${GREEN}üîß QA MCP Server - Database Backup Tool${NC}"
    echo -e "${YELLOW}==========================================${NC}"
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å docker-compose
    if ! command -v docker &> /dev/null; then
        echo -e "${RED}‚ùå Docker –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π!${NC}"
        exit 1
    fi
    
    if ! command -v docker compose &> /dev/null; then
        echo -e "${RED}‚ùå Docker Compose –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π!${NC}"
        exit 1
    fi
    
    # –í–∏–∫–æ–Ω—É—î–º–æ –±–µ–∫–∞–ø
    check_containers
    backup_mysql
    backup_qdrant
    create_metadata
    create_archive
    show_statistics
    
    echo -e "\n${GREEN}‚úÖ –ë–µ–∫–∞–ø –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!${NC}"
    echo -e "${YELLOW}üí° –î–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ: ./scripts/restore_database.sh ${BACKUP_NAME}.tar.gz${NC}"
}

# –ó–∞–ø—É—Å–∫
main "$@"
